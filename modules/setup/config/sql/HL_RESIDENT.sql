/******************************************************************************/
/***               Generated by IBExpert 09.04.2025 19:45:33                ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1251;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR GEN_HL_RESIDENT_ID;

CREATE TABLE HL_RESIDENT (
    ID         INTEGER NOT NULL,
    NAME       STR_250 /* STR_250 = VARCHAR(250) */,
    IS_ACTIVE  INTEGER,
    CREATED    TIMESTAMP,
    MODIFY     TIMESTAMP
);




/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE HL_RESIDENT ADD CONSTRAINT PK_HL_RESIDENT PRIMARY KEY (ID);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;




/* Trigger: HL_RESIDENT_AU0 */
CREATE TRIGGER HL_RESIDENT_AU0 FOR HL_RESIDENT
ACTIVE AFTER UPDATE POSITION 0
AS
begin
  if((new.name <> old.name) or (new.is_active <> old.is_active))  then
    update hl_resident set modify='now' where id=old.id;

end
^

/* Trigger: HL_RESIDENT_BI */
CREATE TRIGGER HL_RESIDENT_BI FOR HL_RESIDENT
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
    NEW.ID = GEN_ID(GEN_HL_RESIDENT_ID,1);
END
^

/* Trigger: HL_RESIDENT_SET_CREATED */
CREATE TRIGGER HL_RESIDENT_SET_CREATED FOR HL_RESIDENT
ACTIVE BEFORE INSERT POSITION 1
AS
begin
  if(NEW.created is null)  then
        NEW.created='now';
end
^

/* Trigger: HL_RESIDENT_SET_IS_ACTIVE */
CREATE TRIGGER HL_RESIDENT_SET_IS_ACTIVE FOR HL_RESIDENT
ACTIVE BEFORE INSERT POSITION 2
AS
begin
  if(new.is_active is null) then new.is_active=1;
end
^


SET TERM ; ^

commit;

/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/

commit;
delete from hl_resident hlr where hlr.id=0;
INSERT INTO HL_RESIDENT (ID, NAME, IS_ACTIVE, CREATED, MODIFY) VALUES (0, 'Все', 1, 'now', NULL);

